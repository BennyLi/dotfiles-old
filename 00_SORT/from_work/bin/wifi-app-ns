#!/bin/bash

# Source: http://askubuntu.com/a/466664
# route del default gw eth.router.ip.address

# sudo route del default
# sudo route del default
# sudo route add -net 57.0.0.0/8 gw 10.159.17.1 metric 10
# sudo route add default gw 192.168.43.1 metric 40

netns_name=wifiapp
wifi_dev=wlp2s0

if [[ $EUID -ne 0 ]]; then
    echo "This script must be run with root privileges!" 1>&2
    exit 1
fi

ip netns del $netns_name &>/dev/null
ip netns add $netns_name

ip link add v-$wifi_dev type veth peer name v-peer1
ip link set v-peer1 netns $netns_name

ip addr add 10.200.1.1/24 dev v-$wifi_dev
ip link set v-$wifi_dev up

ip netns exec $netns_name ip addr add 10.200.1.2/24 dev v-peer1
ip netns exec $netns_name ip link set v-peer1 up
ip netns exec $netns_name ip link set lo up

ip netns exec $netns_name ip route add default via 10.200.1.1


# Share internet access between host and NS.

# Enable IP-forwarding.
echo 1 > /proc/sys/net/ipv4/ip_forward

# Flush forward rules, policy DROP by default.
iptables -P FORWARD DROP
iptables -F FORWARD

# Flush nat rules.
iptables -t nat -F

# Enable masquerading of 10.200.1.0.
iptables -t nat -A POSTROUTING -s 10.200.1.0/255.255.255.0 -o $wifi_dev -j MASQUERADE

# Allow forwarding between eth0 and v-eth1.
iptables -A FORWARD -i $wifi_dev -o v-$wifi_dev -j ACCEPT
iptables -A FORWARD -o $wifi_dev -i v-$wifi_dev -j ACCEPT

ip route add 10.200.1.0/24 via 192.168.43.1

iw phy phy0 set netns name wifiapp

ip netns exec $netns_name $@
